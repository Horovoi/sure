<%# locals: (form:) %>
<div data-controller="list-filter category-filter">
  <div class="relative">
    <input type="search"
           autocomplete="off"
           placeholder="Filter category"
           data-list-filter-target="input"
           data-action="input->list-filter#filter"
           class="block w-full bg-container border border-secondary rounded-md py-2 pl-10 pr-3 focus:ring-gray-500 sm:text-sm">
    <%= icon("search", class: "absolute inset-y-0 left-2 top-1/2 transform -translate-y-1/2") %>
  </div>

  <% selected_categories = Array(@q[:categories]).map(&:to_s) %>

  <% render_category_option = lambda do |category, nested: false, parent_name: nil, role: :plain, group_id: nil|
       is_checked = selected_categories.include?(category.name) ||
         (parent_name.present? && selected_categories.include?(parent_name))

       checkbox_options = {
         multiple: true,
         checked: is_checked,
         class: "checkbox checkbox--light"
       }

       if role == :parent && group_id.present?
         checkbox_options[:data] = {
           action: "category-filter#toggleChildren",
           category_filter_group_param: group_id,
           category_filter_target: "parent"
         }
       elsif role == :child && group_id.present?
         checkbox_options[:data] = {
           category_filter_target: "child",
           category_filter_group_id: group_id
         }
       end

       content_tag :div,
         class: "filterable-item flex items-center gap-2 p-2 rounded-md hover:bg-container-inset-hover",
         data: { filter_name: category.name } do
           form.check_box(:categories,
                          checkbox_options,
                          category.name,
                          nil) +
           form.label(:categories, category.name, value: category.name, class: "cursor-pointer w-full") do
             content_tag(:div, class: "flex items-center gap-2 text-sm text-primary") do
               content = []
               if nested
                 content << icon("corner-down-right", size: "sm", class: "text-secondary")
               end
               content << render(partial: "categories/badge", locals: { category: category })
               safe_join(content)
             end
           end
         end
     end %>

  <div class="my-2 flex flex-col gap-1" id="list" data-list-filter-target="list">
    <%= render_category_option.call(Category.uncategorized) %>

    <% grouped_family_categories.each do |group| %>
      <%= render_category_option.call(group.category, role: :parent, group_id: group.category.id) %>

      <% group.subcategories.each do |subcategory| %>
        <%= render_category_option.call(subcategory, nested: true, parent_name: group.category.name, role: :child, group_id: group.category.id) %>
      <% end %>
    <% end %>
  </div>
</div>
